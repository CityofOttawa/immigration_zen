//
// Custom sass mixins
//
// To use a mixin in this file, add this line to the top of your .scss file:
//   @import "base";
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;

/*creates subtle dropshadow on text */
@mixin text-shading{
  @include text-shadow(rgba(black, 0.4) 1px 1px 1px);
  color: #fff; 
}

@mixin zero{
  margin: 0;
  padding: 0;
}

@mixin ease-all{
    @include transition-property(all);
    @include transition-duration(250ms);
    @include transition-timing-function(ease-in-out);
}

@mixin button{
  @include text-shading;
  @include ease-all;
  @include box-shadow(none);
  @include rem-fallback(font-size, 1.143);
  
  color: #fff;
  padding: .25em 1em .35em;
  border: 0;  

  &:active{
    position: relative;
    top: 1px;
  }
}

/* See Paul Irish <http://www.paulirish.com/2012/box-sizing-border-box-ftw/> */
@mixin border-box{
  -moz-box-sizing: border-box; 
  -webkit-box-sizing: border-box; 
  box-sizing: border-box;
}

@mixin btn-grad{
  //@include filter-gradient(#0d000000, #26000000, vertical); // IE6-8
  // IE9 SVG, needs conditional override of 'filter' to 'none'
  $experimental-support-for-svg: true;
  @include background-image(linear-gradient(top, rgba(0,0,0,0.05) 0%,rgba(0,0,0,0.05) 49%,rgba(0,0,0,0.15) 50%,rgba(0,0,0,0.15) 100%));
   
}

@mixin hide-text{
  text-indent: -9999px;
  white-space: nowrap;
  overflow: hidden;
}

//$icons-layout: diagonal;
@import "../images/icons/*.png";
@include all-icons-sprites;

/* easy-ease-in transition animation*/


/* Mixin for REM with fallback (Karl Merkli)

For formatting and usage see:
http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/

*/

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}

// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// The word "Unpublished" displayed underneath unpublished nodes and comments.
@mixin unpublished-div {
  height: 0;
  overflow: visible;
  color: #d8d8d8;
  font-size: 75px;
  line-height: 1;
  font-family: Impact, "Arial Narrow", Helvetica, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  word-wrap: break-word; // A very nice CSS3 property

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    .lt-ie8 &>* {
      position: relative; // Otherwise these elements will appear below the "Unpublished" text.
    }
  }
}


@mixin fadein-right{
  .animated{-webkit-animation-fill-mode:both;-moz-animation-fill-mode:both;-ms-animation-fill-mode:both;-o-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:1s;-moz-animation-duration:1s;-ms-animation-duration:1s;-o-animation-duration:1s;animation-duration:1s;}.animated.hinge{-webkit-animation-duration:2s;-moz-animation-duration:2s;-ms-animation-duration:2s;-o-animation-duration:2s;animation-duration:2s;}@-webkit-keyframes fadeInRight {
  	0% {
  		opacity: 0;
  		-webkit-transform: translateX(20px);
  	}	100% {
  		opacity: 1;
  		-webkit-transform: translateX(0);
  	}
  }

  @-moz-keyframes fadeInRight {
  	0% {
  		opacity: 0;
  		-moz-transform: translateX(20px);
  	}

  	100% {
  		opacity: 1;
  		-moz-transform: translateX(0);
  	}
  }

  @-o-keyframes fadeInRight {
  	0% {
  		opacity: 0;
  		-o-transform: translateX(20px);
  	}

  	100% {
  		opacity: 1;
  		-o-transform: translateX(0);
  	}
  }

  @keyframes fadeInRight {
  	0% {
  		opacity: 0;
  		transform: translateX(20px);
  	}

  	100% {
  		opacity: 1;
  		transform: translateX(0);
  	}
  }

  .fadeInRight {
  	-webkit-animation-name: fadeInRight;
  	-moz-animation-name: fadeInRight;
  	-o-animation-name: fadeInRight;
  	animation-name: fadeInRight;
  }
  
}