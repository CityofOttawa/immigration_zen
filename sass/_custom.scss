//
// Custom sass mixins
//
// To use a mixin in this file, add this line to the top of your .scss file:
//   @import "base";
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;

/*creates subtle dropshadow on text */
@mixin text-shading{
  @include text-shadow(rgba(black, 0.4) 1px 1px 1px);
  color: #fff; 
}

@mixin button{
  @include text-shading;
  padding: .2em 1em 1.5em;
  background-color: $button-spot;
  //@include box-shadow(#f5f5f5 0px 39px 0px -24px inset);
  border: 0;
}

/*
.myButton {
    
    -moz-box-shadow:inset 0px 39px 0px -24px #e67a73;
    -webkit-box-shadow:inset 0px 39px 0px -24px #e67a73;
    box-shadow:inset 0px 39px 0px -24px #e67a73;
    
    background-color:#e4685d;
    
    -moz-border-radius:4px;
    -webkit-border-radius:4px;
    border-radius:4px;
    
    border:1px solid #ffffff;
    
    display:inline-block;
    color:#ffffff;
    font-family:arial;
    font-size:15px;
    font-weight:normal;
    padding:6px 15px;
    text-decoration:none;
    
    text-shadow:0px 1px 0px #b23e35;
    
}
.myButton:hover {
    
    background-color:#eb675e;
}
.myButton:active {
    position:relative;
    top:1px;
}
*/

/* easy-ease-in transition animation*/
@mixin ease-all{
    @include transition-property(all);
    @include transition-duration(250ms);
    @include transition-timing-function(ease-in-out);
}


/* Mixin for REM with fallback (Karl Merkli)

For formatting and usage see:
http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/

*/

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}

// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// The word "Unpublished" displayed underneath unpublished nodes and comments.
@mixin unpublished-div {
  height: 0;
  overflow: visible;
  color: #d8d8d8;
  font-size: 75px;
  line-height: 1;
  font-family: Impact, "Arial Narrow", Helvetica, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  word-wrap: break-word; // A very nice CSS3 property

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    .lt-ie8 &>* {
      position: relative; // Otherwise these elements will appear below the "Unpublished" text.
    }
  }
}
